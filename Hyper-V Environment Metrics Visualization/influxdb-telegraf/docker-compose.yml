version: '3'
services:

  influxdb:
    image: influxdb
    restart: always
    ports:
      - 8086:8086
    volumes:
      - ./ssl/influxdb.key:/etc/ssl/influxdb.key
      - ./ssl/influxdb.pem:/etc/ssl/influxdb.pem
      - ./influxdb.conf:/etc/influxdb/influxdb.conf:ro 
      - influxdb-volume:/var/lib/influxdb      
    environment:
      INFLUXDB_DB: telegraf 
      INFLUXDB_ADMIN_ENABLED: "True" 
      INFLUXDB_ADMIN_USER: admin 
      INFLUXDB_ADMIN_PASSWORD: supersecretpassword 
      INFLUXDB_USER: telegraf 
      INFLUXDB_USER_PASSWORD: telegraf
    networks:
      - monitoring          
      
  telegraf:
    image: telegraf
    depends_on:
      - influxdb
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/rootfs/sys:ro
      - /proc:/rootfs/proc:ro
      - /etc:/rootfs/etc:ro
    restart: always 
    networks:
      - monitoring     

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
    networks:
      - monitoring          

  cadvisor:
    image: google/cadvisor:latest
    #ports:
    #  - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /proc:/rootfs/proc:ro      
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis
    networks:
      - monitoring   

  nodeexporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /var/run:/var/run:rw      
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - monitoring

  redis:
    image: redis:latest
    #ports:
    #  - 6379:6379
    networks:
      - monitoring        

  grafana:
    image: grafana/grafana
    #ports:
    #  - 3000:3000
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./ldap.toml:/etc/grafana/ldap.toml
      - grafana-volume:/var/lib/grafana
    networks:
      - monitoring
    restart: always

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./ssl/nginx.key:/etc/nginx/nginx.key
      - ./ssl/nginx.pem:/etc/nginx/nginx.pem

    networks:
      - monitoring
    depends_on: 
      - grafana


volumes:
  influxdb-volume:
  grafana-volume:

networks:
  monitoring:
