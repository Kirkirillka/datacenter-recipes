version: '3'

services:    
  postgresql:
    image: postgres:11
    restart: always
    ports:
      - 5432:5432
    networks:
      - ci-network          
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    environment:
       - POSTGRES_MULTIPLE_DATABASES=gitea,drone
       - POSTGRES_USER=${DB_USER}
       - POSTGRES_PASSWORD=${DB_PASS}
           
       
  gitea-app:
    image: gitea/gitea:1.9.3
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - ROOT_URL=http://gitea-app:3000   
    restart: always
    ports:
      - "3000:3000"
      - "2222:22"
    networks:
      - ci-network          
    depends_on:
      - postgresql      

  drone-server:
    image: drone/drone:1.3.1
    ports:
      - "8000:80"
      - "9000:443"
    networks:
      - ci-network      
    volumes:
       - /var/run/docker.sock:/var/run/docker.sock      
    environment:
      - DRONE_OPEN=true
      - DRONE_HOST=http://drone-server:8000
      - DRONE_SECRET=${DRONE_SECRET}      
      - DRONE_GITEA=true
      - DRONE_GITEA_SERVER=http://gitea-app:3000
      - DRONE_RPC_SECRET=${DRONE_SECRET}
      - DRONE_DATABASE_DRIVER=postgres  
      - DRONE_NETWORK=ci-network
      - DRONE_RUNNER_NETWORKS=ci-network
      - DRONE_DATABASE_DATASOURCE=postgres://${DB_USER}:${DB_PASS}@postgresql:5432/drone?sslmode=disable
    depends_on:
      - postgresql
      
  drone-agent:
    image: drone/agent:1.3.1
    command: agent
    restart: always
    privileged: true
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ci-network          
    environment:
      - DRONE_SERVER=drone-server:9000
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_RUNNER_NETWORK=ci-network

      
networks:
  ci-network:
    external: true